name: Build and Push

on:
  workflow_run:
    workflows: ["Run Lint", "Run Tests"]
    branches: [development]
    types: 
      - completed
jobs:
  # deploy on pushes to master branch
  # assumes aws credentials (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY) are set in github secrets
  push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  
    runs-on: ubuntu-latest
    env:
      TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
    steps:
      - name: Output Run ID
        run: echo ${{ github.run_id }}
      - name: Output Run Number
        run: echo ${{ github.run_number }}
    
      - name: Install Musl-gcc
        run: |
          sudo apt update -y
          sudo apt install -y musl-tools
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          targets: x86_64-unknown-linux-musl

      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Install Dependencies
        working-directory: student-lambda
        run: |
          sudo apt install -y pkg-config libssl-dev
          sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm
          sudo ln -s /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic
          sudo ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux
          sudo mkdir /musl
          sudo apt-get install wget
          sudo wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz
          sudo tar zxvf OpenSSL_1_1_1f.tar.gz
          cd openssl-OpenSSL_1_1_1f/
          sudo CC="musl-gcc -fPIE -pie" ./Configure no-shared no-async --prefix=/musl --openssldir=/musl/ssl linux-x86_64
          sudo apt-get install build-essential
          sudo make depend
          sudo make -j$(nproc)
          sudo make install
      - name: Build
        working-directory: student-lambda
        run: |
          export PKG_CONFIG_ALLOW_CROSS=1
          export OPENSSL_STATIC=true
          export OPENSSL_DIR=/musl

          cd /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/student-lambda
          cargo build --release --target x86_64-unknown-linux-musl
          cp ./target/x86_64-unknown-linux-musl/release/student ./bootstrap && zip ${{ github.event.repository.name }}.zip bootstrap
          rm bootstrap
      - name: Push to S3
        working-directory: student-lambda
        run: |
            cd /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/student-lambda
            aws s3 cp ./${{ github.event.repository.name }}.zip s3://891616054205-ap-southeast-1-aws-lambda/builds-hocvienconggiao/${{ github.event.repository.name }}/latest/${{ github.event.repository.name }}.zip
            aws s3 cp ./${{ github.event.repository.name }}.zip s3://891616054205-ap-southeast-1-aws-lambda/builds-hocvienconggiao/${{ github.event.repository.name }}/${{ github.run_number }}/${{ github.event.repository.name }}.zip
      - name: App Deploy Terraform Config
        run: |
          chmod +x ./scripts/terraform-enterprise-push.sh
          ./scripts/terraform-enterprise-push.sh student-lambda/terraform HocVienCongGiao/dev-sg-lambda-services-hvcg-${{ github.event.repository.name }}
