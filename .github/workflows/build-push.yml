name: Build and Push

on:
  push:
    branches:
      - development
      - prod

jobs:
  check_lambda_files:
    name: Check Lambda source code
    outputs:
      run_job: ${{ steps.check_lambda_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check modified AWS Lambda Source Code
        id: check_lambda_files
        working-directory: student-lambda
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file == student-lambda/terraform/* || $file == .github/*  ]]; then
              echo "This modified file is not Lambda source code"
              echo "::set-output name=run_job::false"
              break
            else
              echo "::set-output name=run_job::true"
            fi
          done < files.txt

  codestyle:
    runs-on: ubuntu-latest
    needs: [ check_lambda_files ]
    if: needs.check_lambda_files.outputs.run_job == 'true'
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - uses: actions/checkout@v2
      -
        working-directory: student-app
        run: cargo fmt --all -- --check
      -
        working-directory: student-lambda
        run: cargo fmt --all -- --check
  lint:
    runs-on: ubuntu-latest
    needs: [ check_lambda_files ]
    if: needs.check_lambda_files.outputs.run_job == 'true'
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - uses: actions/checkout@v2
      - 
        working-directory: student-lambda
        run: cargo clippy --all-targets -- -D clippy::all
      -
        working-directory: student-app
        run: cargo clippy --all-targets -- -D clippy::all
  compile:
    runs-on: ubuntu-latest
    needs: [ check_lambda_files ]
    if: needs.check_lambda_files.outputs.run_job == 'true'
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - 
        working-directory: student-lambda
        run: cargo check --all
      -
        working-directory: student-app
        run: cargo check --all
  # deploy on pushes to master branch
  # assumes aws credentials (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY) are set in github secrets
  push_dev:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    env:
      TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
    steps:
      - name: App Deploy Terraform Config
        run: |
          chmod +x ./scripts/terraform-enterprise-push.sh
          ./scripts/terraform-enterprise-push.sh student-lambda/terraform HocVienCongGiao/dev-sg-lambda-services-hvcg-student-service