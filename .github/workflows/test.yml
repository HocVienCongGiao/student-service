name: Lint and Tests

on:
  push:
    branches-ignore:
      - master
      
jobs:
  codestyle:
    runs-on: peterbean
    steps:
#       - name: Set up Rust
#         uses: hecrj/setup-rust-action@v1
#         with:
#           components: rustfmt
      - uses: actions/checkout@v2
      - name: Cargo version
        working-directory: student-lambda      
        run: |
          source $HOME/.cargo/env
          cargo version
      - name: Lambda Cargo fmt
        working-directory: student-lambda
        run: |
          source $HOME/.cargo/env
          cargo fmt --all -- --check
      - name: Check App Cargo fmt
        working-directory: student-app
        run: |
          source $HOME/.cargo/env
          cargo fmt --all -- --check
  lint:
    runs-on: peterbean
    steps:
#       - name: Set up Rust
#         uses: hecrj/setup-rust-action@v1
#         with:
#           components: clippy
      - uses: actions/checkout@v2
      - name: Lambda Cargo lint
        working-directory: student-lambda
        run: |
          source $HOME/.cargo/env
          cargo clippy --all-targets -- -D clippy::all
      - name: App Cargo lint
        working-directory: student-app
        run: |
          source $HOME/.cargo/env
          cargo clippy --all-targets -- -D clippy::all
  compile:
    runs-on: peterbean
    steps:
#       - name: Set up Rust
#         uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - name: Lambda Cargo check
        working-directory: student-lambda
        run: |
          source $HOME/.cargo/env
          cargo check --all
      - name: App Cargo check
        working-directory: student-app
        run: |
          source $HOME/.cargo/env
          cargo check --all
  test:
    needs: [codestyle, lint, compile]
    runs-on: peterbean
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: dev_hocvien
          POSTGRES_PASSWORD: 123456
          POSTGRES_USER: hocvien_dev
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
#     - name: Setup Rust
#       uses: hecrj/setup-rust-action@v1
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: ./rust-service
    - name: Checkout shared-db-service
      uses: actions/checkout@v2
      with:
        # Repository name with owner. For example, actions/checkout
        # Default: ${{ github.repository }}
        repository: 'HocVienCongGiao/shared-db-service'
        path: ./db-service
        ref: development
        token: ${{ secrets.GH_OAUTH_TOKEN }}
    - name: Setup python
      working-directory: ./db-service
      env:
        DB_NAME: dev_hocvien
        DB_PASSWORD: 123456
        DB_USER: hocvien_dev
        DB_HOST: 0.0.0.0
      run: |
        echo "prepare"
        sudo apt-get update -y &&
        sudo apt-get install -y postgresql-server-dev-all gcc python3-dev musl-dev
        echo "install python"
        pip install -r ./requirements.txt --target ./lambda/terraform/module/python
        echo "copy python files in lamda folder"
        cp -R ./lambda/*.py ./lambda/terraform/module/python/
        echo "copy python files in shared_db_app folder"
        cp -R ./shared_db_app ./lambda/terraform/module/python/
        echo "copy python files in shared_db_app folder"
        cp -R ./migrations ./lambda/terraform/module/python/
        echo "all files in shared_db_app python folder"
        ls -l ./lambda/terraform/module/python/
        cd ./lambda/terraform/module/python/ && python -c 'from shared_db_app.migration import migrate; migrate()'
        echo "migrate successfully"
        psql -h 0.0.0.0 -U hocvien_dev -d dev_hocvien -p 5432 -c 'SELECT * FROM public.identity__user_view' -w
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: Test lambda
      working-directory: ./rust-service/student-lambda
      run: |
          source $HOME/.cargo/env
          cargo test
    - name: Test components
      working-directory: ./rust-service/student-app
      run: |
          source $HOME/.cargo/env
          cargo test

